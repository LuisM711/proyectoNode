extends layout

block content
  .container.mt-5
    .row
      .col-md-10.mx-auto
        .table-responsive
          table.table.table-striped
            thead
              tr
                th ID del Empleado
                th Usuario
                th Sueldo mensual
                th Descuentos
                th Acciones
            tbody
              each empleado in empleadosData
                tr
                  td= empleado.IDEmp
                  td= empleado.Usuario
                  td= empleado.SueldoMensual
                  td= empleado.DeudaTotal
                  td
                    button.btn.btn-primary(type="button", onclick=`abrirModalDetalles(${empleado.IDEmp})`) Detalles

  script.
    const empleadosData = !{JSON.stringify(empleadosData)}; // Convierte cargosData a objeto JavaScript

    const abrirModalDetalles = (ID) => {
      // Generar el modal dinámicamente
      const modalContent = `
        <div class="modal fade" id="detalleEmpleadoModal-${ID}" tabindex="-1">
          <div class="modal-dialog modal-dialog-centered modal-lg">
            <div class="modal-content">
              <div class="modal-header">
                <h5 class="modal-title">Detalles del Empleado</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
              </div>
              <div class="modal-body">
                <form id="detalleEmpleadoForm-${ID}">
                  <p>ID del Empleado: ${ID}</p>
                  <label for="sueldoMensual">Sueldo Mensual:</label>
                  <input type="number" id="sueldoMensual" name="sueldoMensual" value="${empleadosData.find(e => e.IDEmp === ID).SueldoMensual}" required>
                  <div id="detallesContent-${ID}"></div>
                  <button type="button" onclick="agregarFila(${ID})">Agregar</button>
                </form>
              </div>
              <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                <button type="button" class="btn btn-primary" onclick="guardarDetalles(${ID})">Guardar</button>
              </div>
            </div>
          </div>
        </div>
      `;

      // Insertar el modal en el cuerpo del documento
      document.body.insertAdjacentHTML('beforeend', modalContent);

      // Hacer la petición GET al backend para obtener los detalles y actualizar el contenido del modal
      fetch(`/detallesDeducciones/${ID}`)
        .then(response => response.json())
        .then(detalles => {
          //console.log(detalles);

          // Construir el formulario dinámicamente con los datos recibidos
          const detallesContent = document.getElementById(`detallesContent-${ID}`);
          detallesContent.innerHTML = "";
          detalles.forEach((detalle, index) => {
            detallesContent.innerHTML += `
              <div>
                <label for="monto-${index}">Monto:</label>
                <input type="number" id="monto-${index}" name="monto-${index}" value="${detalle.MONTO}" required>
                <label for="descripcion-${index}">Descripción:</label>
                <input type="text" id="descripcion-${index}" name="descripcion-${index}" value="${detalle.DESCRIPCION}" required>
                <button type="button" onclick="eliminarFila(${ID}, ${index})">Eliminar</button>
              </div>
            `;
          });
        })
        .catch(error => console.error(error));

      // Mostrar el modal
      const detalleEmpleadoModal = new bootstrap.Modal(document.getElementById(`detalleEmpleadoModal-${ID}`));
      detalleEmpleadoModal.show();
    };

    const agregarFila = (ID) => {
      // Añadir una fila adicional al formulario
      const detallesContent = document.getElementById(`detallesContent-${ID}`);
      const index = detallesContent.children.length; // Obtener el índice para el nuevo detalle
      detallesContent.innerHTML += `
        <div>
          <label for="monto-${index}">Monto:</label>
          <input type="number" id="monto-${index}" name="monto-${index}" required>
          <label for="descripcion-${index}">Descripción:</label>
          <input type="text" id="descripcion-${index}" name="descripcion-${index}" required>
          <button type="button" onclick="eliminarFila(${ID}, ${index})">Eliminar</button>
        </div>
      `;
    };

    const eliminarFila = (ID, index) => {
      // Eliminar la fila del formulario
      const detallesContent = document.getElementById(`detallesContent-${ID}`);
      detallesContent.children[index].remove();

      // Actualizar los índices de las filas restantes
      const detalleInputs = detallesContent.querySelectorAll('div');
      detalleInputs.forEach((detalleInput, i) => {
        detalleInput.querySelector('input[type="number"]').name = `monto-${i}`;
        detalleInput.querySelector('input[type="text"]').name = `descripcion-${i}`;
        detalleInput.querySelector('button').setAttribute('onclick', `eliminarFila(${ID}, ${i})`);
      });
    };

    const guardarDetalles = (ID) => {
      let flag = false;
      const sueldoMensual = document.getElementById('sueldoMensual').value;
      const sueldoRegex = /^\d+(\.\d{1,2})?$/;
      if (!sueldoRegex.test(sueldoMensual)) {
        alert("Ingrese un sueldo mensual válido");
        flag = true;
        return;
      }
      const detalles = [];
      const detallesContent = document.getElementById(`detallesContent-${ID}`);
      const detalleInputs = detallesContent.querySelectorAll('div');
      detalleInputs.forEach((detalleInput) => {
        const monto = detalleInput.querySelector('input[type="text"]').value;
        const descripcion = detalleInput.querySelector('input[type="text"]').value;

        // Validar el monto con una expresión regular para dinero
        const montoRegex = /^\d+(\.\d{1,2})?$/;
        if (!montoRegex.test(monto)) {
          flag = true;
          alert("Ingrese un monto válido");
          return;
        }

        detalles.push({ MONTO: monto, DESCRIPCION: descripcion });
      });
      if (flag) return;
      const cuerpo = JSON.stringify({ sueldoMensual, detalles });
      console.log(cuerpo);

      // Realizar la petición al backend para guardar los detalles
      fetch(`/guardarDetallesEmpleado/${ID}`, {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json',
        },
        body: cuerpo,
      })
        .then(response => response.json())
        .then(resultado => {
          console.log(resultado);
          location.reload();
        })
        .catch(error => console.error(error));
    };












